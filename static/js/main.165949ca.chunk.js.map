{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC5B,OACK,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCcCK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACM,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACxB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKIC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OACI,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCDI,EARA,SAACC,GACf,OACK,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCiBAC,E,kDAnBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAAIG,KAAKJ,MAAMC,SACP,yDAEDG,KAAKX,MAAMK,a,GAhBOQ,aC8CZC,G,wDAxCd,aAAe,IAAD,8BACX,gBAaHC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAbrC,EAAKX,MAAQ,CACdlB,OAAQ,GACRK,YAAa,IAJJ,E,qDAQd,WAAqB,IAAD,OACnByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAOzC,WAAU,IAAD,OACFC,EAAiBb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAAC,GAChD,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAEjE,OAAiC,IAA7BhB,KAAKJ,MAAMlB,OAAOwC,OACd,yCAGP,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,UACK,cAAC,EAAD,CAAU1B,OAAQmC,e,GAhCZX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.165949ca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n\treturn (\r\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n        <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n        <div>\r\n          <h2>{name}</h2>\r\n          <p>{email}</p>\r\n        </div>\r\n      </div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n       <div>\r\n          {\r\n          \trobots.map((user, i) => {\r\n    \treturn (\r\n    \t <Card \r\n    \t\tkey={i} \r\n    \t\tid={robots[i].id} \r\n    \t\tname={robots[i].name} \r\n    \t\temail={robots[i].email}\r\n    \t\t/>\r\n    \t\t);\r\n        })\r\n          }\r\n       </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n\treturn(\r\n     <div className='pa2'>\t\t\r\n      <input\r\n      className = 'pa3 ba b--green bg-lightest-blue' \r\n      type='search' \r\n      placeholder='search robots' \r\n      onChange={searchChange}\r\n      />\r\n     </div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n      <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n        {props.children}\r\n      </div>\r\n\t );\r\n\t};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Ooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t   super()\r\n       this.state = {\r\n\t     robots: [],\r\n\t     searchfield: ''\r\n     }\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users => {this.setState({ robots: users})});\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\trender() {\r\n\t const filteredRobots = this.state.robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t})\r\n\tif (this.state.robots.length === 0) {\r\n\t\treturn <h1>Loading</h1>\r\n\t} else {\r\n\t return(\r\n\t <div className='tc'>\r\n\t   <h1 className='f1'>RoboFriends</h1>\r\n\t   <SearchBox searchChange={this.onSearchChange}/>\r\n\t   <Scroll>\r\n\t      <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n       </Scroll>\r\n     </div>\r\n\t);\r\n\t} \r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n     <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}